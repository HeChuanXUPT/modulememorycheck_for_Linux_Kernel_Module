diff -uparN linux-2.6.32.bak/arch/x86/include/asm/modulememcheck.h linux-2.6.32/arch/x86/include/asm/modulememcheck.h
--- linux-2.6.32.bak/arch/x86/include/asm/modulememcheck.h	1970-01-01 08:00:00.000000000 +0800
+++ linux-2.6.32/arch/x86/include/asm/modulememcheck.h	2014-03-24 17:52:49.182029006 +0800
@@ -0,0 +1,69 @@
+#ifndef ASM_X86_MMEMCHECK_H
+#define ASM_X86_MMEMCHECK_H
+
+#include <linux/types.h>
+#include <asm/ptrace.h>
+/*
+#ifdef CONFIG_KMEMCHECK
+bool kmemcheck_active(struct pt_regs *regs);
+
+void kmemcheck_show(struct pt_regs *regs);
+void kmemcheck_hide(struct pt_regs *regs);
+*/
+
+#define MMC_PROCESS_HASH_BITS 5
+#define MMC_PROCESS_TABLE_SIZE (1 << MMC_PROCESS_HASH_BITS)
+
+struct mmc_process_info {
+	struct hlist_node hlist;
+	int pid;
+	char *symbol_name;
+	unsigned long readtimes;
+	unsigned long writetimes;
+};
+
+struct modulememcheck_alloc_obj {
+	unsigned long address;
+	pte_t *pte;
+
+	/* struct process_info *pinfo */
+	struct hlist_head pro_objs[MMC_PROCESS_TABLE_SIZE];
+};
+
+//struct modulememcheck_alloc mmcheck_alloc_objs;
+
+bool modulememcheck_fault(struct pt_regs *regs,
+	unsigned long address, unsigned long error_code);
+
+bool modulememcheck_trap(struct pt_regs *regs);
+
+int modulememcheck_alloc(unsigned long address);
+/*
+bool kmemcheck_trap(struct pt_regs *regs);
+#else
+static inline bool kmemcheck_active(struct pt_regs *regs)
+{
+	return false;
+}
+
+static inline void kmemcheck_show(struct pt_regs *regs)
+{
+}
+
+static inline void kmemcheck_hide(struct pt_regs *regs)
+{
+}
+
+static inline bool kmemcheck_fault(struct pt_regs *regs,
+	unsigned long address, unsigned long error_code)
+{
+	return false;
+}
+
+static inline bool kmemcheck_trap(struct pt_regs *regs)
+{
+	return false;
+}
+#endif // CONFIG_KMEMCHECK /
+*/
+#endif
